"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePaginationItems = void 0;
var react_1 = require("react");
var compositions_1 = require("../compositions");
var util_1 = require("../helpers/util");
var useWidestComposition_1 = require("./useWidestComposition");
function usePaginationItems(inputCurrent, inputTotal, maxWidth, options) {
    var total = (0, util_1.sanatizeInteger)(inputTotal);
    var current = total < 1 ? null : Math.max(1, Math.min((0, util_1.sanatizeInteger)(inputCurrent), total));
    var narrowToWideCompositionsProvider = function () {
        return (0, compositions_1.narrowToWideCompositions)(current, total);
    };
    var _a = (0, useWidestComposition_1.useWidestComposition)(narrowToWideCompositionsProvider, maxWidth), items = _a.items, ref = _a.ref, clearCache = _a.clearCache;
    (0, react_1.useEffect)(function () {
        return function () { return clearCache(); };
    }, [clearCache, options === null || options === void 0 ? void 0 : options.previousLabel, options === null || options === void 0 ? void 0 : options.nextLabel]);
    var amendedItems = items.map(function (item) {
        if (item.type === 'next' && (options === null || options === void 0 ? void 0 : options.nextLabel)) {
            return __assign(__assign({}, item), { label: options === null || options === void 0 ? void 0 : options.nextLabel });
        }
        else if (item.type === 'previous' && (options === null || options === void 0 ? void 0 : options.previousLabel)) {
            return __assign(__assign({}, item), { label: options === null || options === void 0 ? void 0 : options.previousLabel });
        }
        else {
            return item;
        }
    });
    return { items: amendedItems, ref: ref };
}
exports.usePaginationItems = usePaginationItems;
